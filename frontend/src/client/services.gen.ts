// This file is auto-generated by @hey-api/openapi-ts

import { client, type Options } from "@hey-api/client-fetch";
import type {
  RegisterUserData,
  RegisterUserError,
  RegisterUserResponse,
  LoginAccessTokenData,
  LoginAccessTokenError,
  LoginAccessTokenResponse,
  ReadUserMeError,
  ReadUserMeResponse,
} from "./types.gen";

/**
 * Register User
 * Register a new user.
 *
 * Parameters:
 * - session: Database session dependency.
 * - user_in: User input data for registration.
 *
 * Returns:
 * - The newly created user data as `UserPublic`.
 *
 * Raises:
 * - HTTPException: If email or username is already registered.
 */
export const registerUser = (options: Options<RegisterUserData>) => {
  return (options?.client ?? client).post<
    RegisterUserResponse,
    RegisterUserError
  >({
    ...options,
    url: "/api/v1/auth/register",
  });
};

/**
 * Login Access Token
 * Login user and return an access token.
 *
 * Parameters:
 * - session: Database session dependency.
 * - form_data: User input data for login.
 *
 * Returns:
 * - Access token for the authenticated user.
 *
 * Raises:
 * - HTTPException: If authentication fails.
 */
export const loginAccessToken = (options: Options<LoginAccessTokenData>) => {
  return (options?.client ?? client).post<
    LoginAccessTokenResponse,
    LoginAccessTokenError
  >({
    ...options,
    url: "/api/v1/auth/login/access-token",
  });
};

/**
 * Read User Me
 */
export const readUserMe = (options?: Options) => {
  return (options?.client ?? client).get<ReadUserMeResponse, ReadUserMeError>({
    ...options,
    url: "/api/v1/auth/me",
  });
};
